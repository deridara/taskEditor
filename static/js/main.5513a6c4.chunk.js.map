{"version":3,"sources":["components/common/Button.js","colors.js","services/tasks.js","modules/tasks.js","components/AuthForm.js","components/Task.js","components/Filters.js","components/TasksList.js","components/TaskForm.js","components/Page.js","modules/index.js","redux.js","index.js"],"names":["Button","styled","div","_templateObject","BASE_URL","getTasks","_ref","sortDirection","page","sortField","name","arguments","length","undefined","qs","concat","fetch","then","res","json","catch","err","createTask","body","console","log","method","JSON","stringify","response","getTasksSaga","createTaskSaga","GET_TASKS_REQUEST","appName","GET_TASKS_SUCCESS","GET_TASKS_ERROR","CREATE_TASK_REQUEST","CREATE_TASK_SUCCESS","CREATE_TASK_ERROR","SET_FILTER_OPTIONS","options","type","payload","setFilterOptions","initialState","tasks","totalTaskCount","filterOptions","loading","reducer","state","Object","objectSpread","toConsumableArray","total_task_count","stateSelector","tasksSelector","createSelector","totalTaskCountSelector","loadingSelector","filterOptionsSelector","_ref2","data","regenerator_default","a","wrap","_context","prev","next","call","service","sent","put","message","t0","error","stop","_marked","_ref3","_context2","_marked2","saga","mark","_context3","all","takeEvery","Label","label","AuthForm_templateObject","Form","_templateObject2","Input","input","_templateObject3","Error","_templateObject4","Wrapper","_templateObject5","AuthForm","handleChange","event","_this","setState","defineProperty","target","value","handleSubmit","e","preventDefault","_this$state$data","password","localStorage","setItem","getForm","react_default","createElement","onChange","common_Button","onClick","logOut","clear","forceUpdate","getAdmin","Fragment","access","getItem","this","Component","connect","TaskWrapper","Task_templateObject","Email","Task_templateObject2","Text","Task_templateObject3","Username","Task_templateObject4","Checkbox","Task_templateObject5","Task","record","email","username","text","status","checked","disabled","Filter","Filters_templateObject","DirectionButton","Filters_templateObject2","props","active","StyledForm","form","Filters_templateObject3","Filters","getSortDirectionButtons","onDirectionButtonClick","onFilterChange","getSortFieldSelector","onSortFormChange","handleSortFormSubmit","_this$props","TasksList_templateObject","PaginationWrapper","TasksList_templateObject2","Page","TasksList_templateObject3","TaskList","classCallCheck","possibleConstructorReturn","getPrototypeOf","componentDidMount","shouldComponentUpdate","getPagination","pagesCount","Math","ceil","currentPage","pages","i","push","number","map","renderPageButton","TasksList_Page","onPageClick","key","_this$state","newState","components_Filters","task","id","emailRegEx","Fieldset","fieldset","TaskForm_templateObject","Legend","legend","TaskForm_templateObject2","TaskForm_templateObject3","LabelText","TaskForm_templateObject4","TaskForm_templateObject5","_templateObject6","TaskForm","match","onSubmit","TaskForm_Label","TaskForm_Input","placeholder","TaskForm_Error","components_AuthForm","components_TaskForm","TasksList","modules","rootSaga","keys","reduce","acc","default","reducers","sagas","getReducersAndSagas","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middlewares","redux_marked","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","apply","run","ReactDOM","render","es","components_Page","document","getElementById"],"mappings":"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","file":"static/js/main.5513a6c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport * as colors from '../../colors'\n\nconst Button = styled.div`\n  display: inline-block;\n  padding: 0 20px;\n  height: 30px;\n  color: white;\n  background: ${colors.lightBlue};\n  border-radius: 3px;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 30px;\n  cursor: pointer;\n  margin: 0 10px;\n\n  &:hover {\n    background: ${colors.blue};\n  }\n\n  &:active {\n    background: ${colors.darkBlue};\n  }\n`\nexport default Button\n\n","\nexport const lightGrey = '#f5f5f5'\nexport const semiLightGrey = '#ecebeb'\nexport const grey = '#b5b5b5'\n// blues\nexport const lightBlue = '#6ab6ec'\nexport const blue = '#2f99e4'\nexport const darkBlue = '#1976d2'","import request from 'request'\n\nconst BASE_URL = 'https://uxcandy.com/~shapoval/test-task-backend'\n\nexport const getTasks = (\n  { sortDirection, page, sortField },\n  name = 'admin'\n) => {\n  const qs = `${sortDirection ? `&sort_direction=${sortDirection}` : ''}${\n    page ? `&page=${page}` : ''\n  }${sortField ? `&sort_field=${sortField}` : ''}`\n\n  return fetch(`${BASE_URL}/?developer=${name}${qs}`)\n    .then(res => res.json())\n    .catch(err => err)\n}\n\nexport const createTask = body => {\n  console.log('SERVICE', body)\n  return fetch(`${BASE_URL}/create`, {\n    method: 'POST',\n    body: JSON.stringify(body)\n  }).then(response => {\n    console.log(response.json())\n    return response.json()\n  })\n}\n","import { all, put, call, takeEvery } from 'redux-saga/effects'\nimport { createSelector } from 'reselect'\n\nimport { name as appName } from '../../package.json'\nimport * as service from '../services/tasks'\n\nconst namespace = 'tasks'\n\n// constants\n\nconst GET_TASKS_REQUEST = `${appName}/${namespace}/GET_TASKS_REQUEST`\nconst GET_TASKS_SUCCESS = `${appName}/${namespace}/GET_TASKS_SUCCESS`\nconst GET_TASKS_ERROR = `${appName}/${namespace}/GET_TASKS_ERROR`\n\nconst CREATE_TASK_REQUEST = `${appName}/${namespace}/CREATE_TASK_REQUEST`\nconst CREATE_TASK_SUCCESS = `${appName}/${namespace}/CREATE_TASK_SUCCESS`\nconst CREATE_TASK_ERROR = `${appName}/${namespace}/CREATE_TASK_ERROR`\n\nconst SET_FILTER_OPTIONS = `${appName}/${namespace}/SET_FILTER_OPTIONS`\n\n// AC\n\nexport const getTasks = options => ({\n  type: GET_TASKS_REQUEST,\n  payload: options\n})\n\nexport const setFilterOptions = options => ({\n  type: SET_FILTER_OPTIONS,\n  payload: options\n})\n\nexport const createTask = body => ({\n  type: CREATE_TASK_REQUEST,\n  payload: body\n})\n\n// reducer\n\nconst initialState = {\n  tasks: [],\n  totalTaskCount: 0,\n  filterOptions: {\n    page: 1,\n    sortDirection: 'asc',\n    sortField: ''\n  },\n  loading: false\n}\n\nexport default function reducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case GET_TASKS_REQUEST:\n      return { ...state, loading: true }\n\n    case GET_TASKS_SUCCESS:\n      return {\n        ...state,\n        tasks: [...payload.tasks],\n        totalTaskCount: +payload.total_task_count,\n        loading: false\n      }\n\n    case GET_TASKS_ERROR:\n      return { ...state, loading: false }\n\n    case SET_FILTER_OPTIONS:\n      return { ...state, filterOptions: { ...state.filterOptions, ...payload } }\n\n    case CREATE_TASK_REQUEST:\n      return { ...state, loading: true }\n\n    case CREATE_TASK_SUCCESS:\n      return { ...state, loading: false }\n\n    case CREATE_TASK_ERROR:\n      return { ...state, loading: false }\n\n    default:\n      return state\n  }\n}\n\n//reselectors\nexport const stateSelector = state => state[namespace]\n\nexport const tasksSelector = createSelector(\n  stateSelector,\n  state => state.tasks\n)\n\nexport const totalTaskCountSelector = createSelector(\n  stateSelector,\n  state => state.totalTaskCount\n)\n\nexport const loadingSelector = createSelector(\n  stateSelector,\n  state => state.loading\n)\n\nexport const filterOptionsSelector = createSelector(\n  stateSelector,\n  state => state.filterOptions\n)\n\n// sagas\n\nexport function* getTasksSaga({ payload }) {\n  try {\n    const data = yield call(service.getTasks, payload)\n    yield put({\n      type: GET_TASKS_SUCCESS,\n      payload: { ...data.message }\n    })\n  } catch (error) {\n    put({\n      type: GET_TASKS_ERROR,\n      error\n    })\n  }\n}\n\nexport function* createTaskSaga({ payload }) {\n  try {\n    const data = yield call(service.createTask, payload)\n    yield put({\n      type: CREATE_TASK_SUCCESS,\n      payload: { ...data.message }\n    })\n  } catch (error) {\n    put({\n      type: CREATE_TASK_ERROR,\n      error\n    })\n  }\n}\n\nexport const saga = function*() {\n  yield all([\n    takeEvery(GET_TASKS_REQUEST, getTasksSaga),\n    takeEvery(CREATE_TASK_REQUEST, createTaskSaga)\n  ])\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Button from './common/Button'\nimport { createTask } from '../modules/tasks'\n\nconst Label = styled.label`\n  display: inline-block;\n  margin: 0 5px;\n`\n\nconst Form = styled.div`\n  padding: 10px;\n  position: relative;\n`\nconst Input = styled.input`\n  height: 20px;\n  margin: 0 0 0 5px;\n`\n\nconst Error = styled.div`\n  position: absolute;\n  color: red;\n  font-family: sans-serif;\n  top: 10px;\n  left: 500px;\n`\n\nconst Wrapper = styled.div`\n  height: 30px;\n  margin: 10px;\n  line-height: 30px;\n`\nclass AuthForm extends Component {\n  state = {\n    data: {},\n    error: false\n  }\n\n  handleChange = event => {\n    this.setState({\n      data: { ...this.state.data, [event.target.name]: event.target.value }\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { name, password } = this.state.data\n    if (!(name && password)) {\n      this.setState({ error: 'Заполните обязательные поля' })\n    } else if (name !== 'admin' || password !== '123') {\n      this.setState({ error: 'Неверные данные (admin, 123)' })\n    } else {\n      this.setState({ error: false })\n      localStorage.setItem('access', 'true')\n    }\n  }\n\n  getForm = () => {\n    return (\n      <Form>\n        <Label>\n          Имя:\n          <Input name=\"name\" onChange={this.handleChange} />\n        </Label>\n        <Label>\n          Пароль:\n          <Input name=\"password\" onChange={this.handleChange} />\n        </Label>\n        <Button type=\"submit\" onClick={this.handleSubmit}>\n          Вход\n        </Button>\n\n        {this.state.error && <Error>{this.state.error}</Error>}\n      </Form>\n    )\n  }\n\n  logOut = () => {\n    localStorage.clear()\n    this.forceUpdate()\n    this.setState({data: {}})\n  }\n\n  getAdmin = () => {\n    return (\n      <React.Fragment>\n        admin\n        <Button onClick={this.logOut}>Выйти</Button>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    const access = localStorage.getItem('access')\n    console.log({access})\n    return <Wrapper>{access ? this.getAdmin() : this.getForm()}</Wrapper>\n  }\n}\n\nexport default connect(\n  state => ({}),\n  { createTask }\n)(AuthForm)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TaskWrapper = styled.div`\n  background: lightblue;\n  padding: 10px;\n  margin: 10px;\n`\n\nconst Email = styled.div`\n  margin: 10px 0;\n  font-family: sans-serif;\n  font-weight: 100;\n`\n\nconst Text = styled.div`\n  margin: 10px 0;\n`\n\nconst Username = styled.div`\n  font-weight: 600;\n  margin: 10px 0;\n`\n\nconst Checkbox = styled.label`\n    float: right;\n`\n\nexport default ({record}) => {\n    const {email, username, text, status} = record\n    return (\n        <TaskWrapper>\n            <Checkbox><input type='checkbox' checked={status} disabled={!localStorage.getItem('access')}/> Проверено </ Checkbox>\n            <Username>{username}</Username>\n            <Email>{email}</Email>\n            <Text>{text}</Text>\n        </TaskWrapper>\n    )\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport SubmitButton from './common/Button'\nimport * as colors from '../colors'\n\nconst Filter = styled.div`\n  margin: 10px;\n`\n\nconst DirectionButton = styled.div`\n  display: inline-block;\n  height: 30px;\n  width: 30px;\n  border: 1px solid ${colors.lightBlue};\n  border-radius: 3px;\n  font-weight: 600;\n  color: ${props => (props.active ? 'white' : colors.darkBlue)};\n  background: ${props => (props.active ? colors.lightBlue : 'white')};\n  cursor: pointer;\n  margin: 0 5px;\n  line-height: 30px;\n  text-align: center;\n\n  &:hover {\n    background: ${colors.lightBlue};\n    color: white;\n  }\n`\n\nconst StyledForm = styled.form`\n  display: inline-block;\n  line-height: 30px;\n  margin: 10px;\n`\n\nclass Filters extends Component {\n  state = {\n    sortField: ''\n  }\n  getSortDirectionButtons = () => {\n    return (\n      <React.Fragment>\n        <DirectionButton\n          onClick={this.onDirectionButtonClick('asc')}\n          active={this.props.sortDirection === 'asc'}\n        >\n          △\n        </DirectionButton>\n        <DirectionButton\n          onClick={this.onDirectionButtonClick('desc')}\n          active={this.props.sortDirection === 'desc'}\n        >\n          ▽\n        </DirectionButton>\n      </React.Fragment>\n    )\n  }\n\n  onDirectionButtonClick = sortDirection => () => {\n    this.props.onFilterChange({ sortDirection })\n    this.props.getTasks({\n      sortDirection,\n      page: this.props.page,\n      sortField: this.props.sortField\n    })\n  }\n\n  getSortFieldSelector = () => {\n    return (\n      <StyledForm>\n        Сортировать по{' '}\n        <select name=\"sort\" onChange={this.onSortFormChange}>\n          <option value=\"id\">id</option>\n          <option value=\"username\">username</option>\n          <option value=\"email\">email</option>\n          <option value=\"status\">status</option>\n        </select>\n        <SubmitButton onClick={this.handleSortFormSubmit}>\n          Сортировать\n        </SubmitButton>\n      </StyledForm>\n    )\n  }\n\n  onSortFormChange = e => {\n    const sortField = e.target.value\n    this.setState({ sortField })\n    this.props.onFilterChange({ sortField })\n  }\n\n  handleSortFormSubmit = () => {\n    const { getTasks, onFilterChange, page, sortDirection } = this.props\n    const { sortField } = this.state\n    onFilterChange({ sortField })\n    getTasks({ sortDirection, page, sortField })\n  }\n\n  render() {\n    return (\n      <Filter>\n        {this.getSortDirectionButtons()}\n        {this.getSortFieldSelector()}\n      </Filter>\n    )\n  }\n}\n\nexport default Filters\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Task from './Task'\nimport * as colors from '../colors'\nimport Filters from './Filters'\n\nimport {\n  tasksSelector,\n  totalTaskCountSelector,\n  loadingSelector,\n  getTasks,\n  setFilterOptions,\n  filterOptionsSelector\n} from '../modules/tasks'\n\nconst Loading = styled.div`\n  content: 'Loading...';\n  width: 100%;\n  text-align: center;\n  margin: 50px;\n`\n\nconst PaginationWrapper = styled.div`\n  margin: 10px;\n  float: right;\n`\n\nconst Page = styled.div`\n  display: inline-block;\n  height: 30px;\n  width: 30px;\n  margin: 0 5px;\n  line-height: 30px;\n  text-align: center;\n  border-radius: 3px;\n  border: 1px solid ${colors.lightBlue};\n  background: ${props => (props.active ? colors.lightBlue : 'white')};\n  cursor: pointer;\n\n  &:hover {\n    background: ${colors.lightBlue};\n  }\n`\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = this.props.filterOptions\n  }\n\n  componentDidMount = () => {\n    this.props.getTasks({ ...this.state })\n  }\n\n  shouldComponentUpdate = () => {\n    return this.props.loading\n  }\n\n  getPagination = totalTaskCount => {\n    const pagesCount = Math.ceil(totalTaskCount / 3)\n    const currentPage = this.state.page\n    const pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push({ number: i, active: i === currentPage })\n    }\n    return (\n      <PaginationWrapper>\n        {pages.map(page => this.renderPageButton(page))}\n      </PaginationWrapper>\n    )\n  }\n\n  renderPageButton = ({ number, active }) => {\n    return (\n      <Page active={active} onClick={this.onPageClick(number)} key={number}>\n        {number}\n      </Page>\n    )\n  }\n\n  onPageClick = page => () => {\n    const { sortDirection, sortField } = this.state\n    this.setState({ page })\n    this.props.setFilterOptions({ page })\n    this.props.getTasks({ sortDirection, page, sortField })\n  }\n\n  onFilterChange = newState => {\n    this.setState(newState)\n    this.props.setFilterOptions(newState)\n  }\n\n  render() {\n    const { tasks, totalTaskCount } = this.props\n    return (\n      <React.Fragment>\n        <Filters\n          onFilterChange={this.onFilterChange}\n          getTasks={this.props.getTasks}\n          sortDirection={this.state.sortDirection}\n          sortField={this.state.sortField}\n          page={this.state.page}\n        />\n        {tasks.map(task => (\n          <Task record={task} key={task.id} />\n        ))}\n        {this.getPagination(totalTaskCount)}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    tasks: tasksSelector(state),\n    totalTaskCount: totalTaskCountSelector(state),\n    loading: loadingSelector(state),\n    filterOptions: filterOptionsSelector(state)\n  }),\n  {\n    getTasks,\n    setFilterOptions\n  }\n)(TaskList)\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { createTask } from '../modules/tasks'\nimport SubmitButton from './common/Button'\n\nconst emailRegEx = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n\nconst Fieldset = styled.fieldset`\n  padding: 0 25px 15px;\n  margin: 0 10px;\n  position: relative;\n`\n\nconst Legend = styled.legend`\n  margin: 0 0 15px;\n  font-size: 1.5em;\n  font-weight: 400;\n`\n\nconst Label = styled.label`\n  display: block;\n  margin: 0 0 5px 0;\n`\n\nconst LabelText = styled.div`\n  display: inline-block;\n  margin: 0 0 10px;\n  width: 60px;\n`\n\nconst Input = styled.input`\n  margin: 0 0 15px;\n  width: 200px;\n  height: 20px;\n  font-size: 1em;\n  padding: 0 10px;\n`\n\nconst Error = styled.div`\n  position: absolute;\n  color: red;\n  font-family: sans-serif;\n  top: 45px;\n  left: 350px;\n`\n\nclass TaskForm extends Component {\n  state = {\n    data: { username: '', email: '', text: '' },\n    error: false\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const { username, email, text } = this.state.data\n    if (!(username && email && text)) {\n      this.setState({ error: 'Заполните обязательные поля' })\n    } else if (!email.match(emailRegEx)) {\n      this.setState({ error: 'Введите валидный адрес' })\n    } else {\n      this.setState({ error: false })\n      this.onSubmit({ username, email, text })\n    }\n  }\n\n  handleChange = event => {\n    this.setState({\n      data: { ...this.state.data, [event.target.name]: event.target.value }\n    })\n  }\n\n  onSubmit = data => {\n    this.props.onSubmit(data)\n  }\n\n  render() {\n    return (\n      <form>\n        <Fieldset>\n          <Legend>Добавить новую задачу</Legend>\n          <Label name=\"username\">\n            <LabelText>Автор:</LabelText>\n            <Input\n              name=\"username\"\n              type=\"text\"\n              placeholder={this.state.username}\n              onChange={this.handleChange}\n            />\n          </Label>\n\n          <Label name=\"email\">\n            <LabelText>Email:</LabelText>\n            <Input\n              name=\"email\"\n              type=\"email\"\n              placeholder={this.state.email}\n              onChange={this.handleChange}\n            />\n          </Label>\n\n          <Label name=\"text\">\n            <LabelText>Текст:</LabelText>\n            <Input\n              name=\"text\"\n              type=\"text\"\n              placeholder={this.state.text}\n              onChange={this.handleChange}\n            />\n          </Label>\n          {this.state.error && <Error>{this.state.error}</Error>}\n          <SubmitButton type=\"submit\" onClick={this.handleSubmit}>\n            Добавить\n          </SubmitButton>\n        </Fieldset>\n      </form>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { createTask }\n)(TaskForm)\n","import React, { Component } from 'react'\n\nimport AuthForm from './AuthForm'\nimport TaskList from './TasksList'\nimport TaskForm from './TaskForm'\n\nclass Page extends Component {\n  \n  render() {\n    return (\n      <React.Fragment>\n        <AuthForm />\n        <TaskForm onSubmit={this.props.createTask}/>\n        <TaskList />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Page\n","import * as tasks from './tasks'\n\nexport default { tasks }","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { all } from 'redux-saga/effects'\nimport modules from './modules'\n\nconst getReducersAndSagas = modules =>\n  Object.keys(modules).reduce(\n    (acc, name) => {\n      const reducer = modules[name].default\n      const saga = modules[name].saga\n      if (reducer && typeof reducer === 'function') {\n        acc.reducers[name] = reducer\n      }\n      if (saga && typeof saga === 'function') {\n        acc.sagas[name] = saga()\n      }\n      return acc\n    },\n    { reducers: {}, sagas: {} }\n  )\n\nconst { reducers, sagas } = getReducersAndSagas(modules)\n\nconst rootReducer = combineReducers({ ...reducers })\n\nconst sagaMiddleware = createSagaMiddleware()\n\nlet middlewares = [\n  sagaMiddleware\n]\n\nfunction* rootSaga() {\n  yield all(sagas)\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Page from \"./components/Page\";\nimport { Provider } from \"react-redux\";\nimport store from './redux'\n\nconst Root = () => (\n  <Provider store={store}>\n    <Page />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}